package ecommerce;

import org.hibernate.Criteria;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistry;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.criterion.Restrictions;

public class HibernateClient {
	 Session session;
	public HibernateClient() {
	   StandardServiceRegistry ssr = new StandardServiceRegistryBuilder().configure("hibernate.cfg.xml").build();  
       Metadata meta = new MetadataSources(ssr).getMetadataBuilder().build();  
       SessionFactory factory = meta.getSessionFactoryBuilder().build();  
       session = factory.openSession();
 
	}
	public void insert(Product product) {
        Transaction t = session.beginTransaction();
        session.save(product);
        t.commit();
       
      
	}
	public Product get(int id) {
		 Product product;
	       Transaction t = session.beginTransaction();
	       Product product = session.get(Product.class, id);
	      
		return null;
	}
	public boolean contains(User u) {
		   Transaction t = session.beginTransaction();
		   User user = session.get(User.class, u.getUsername());
		   if(!user.equals(null)) {
			   return true;
		   }
		return false;
		
	}
	public void close() {
		  session.close();
	}
}
